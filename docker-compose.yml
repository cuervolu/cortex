services:
  backend:
    image: cortex-backend
    container_name: cortex_backend
    build:
      context: apps/backend
      dockerfile: Dockerfile
    ports:
      - '8088:8088'
    networks:
      - cortex
    depends_on:
      - postgres
      - rabbitmq
      - redis
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASS}
      - SPRING_DATA_REDIS_HOST=redis
    volumes:
      - cortex_exercises:/app/cortex-exercises

  postgres:
    image: postgres:alpine3.19
    container_name: cortex_db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: cortex_rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:alpine
    container_name: cortex_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

networks:
  cortex:

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  cortex_exercises: